(*
This code implements a randomly grown symbolic expression:

xor(xor(xor(xor(IN21, (IN18 & (xor(xor(((xor(xor((IN50 | IN1) & (IN14 & IN11), xor(xor(IN43 | IN14, xor(xor(IN44, IN33), IN13)), !(IN12))), IN23)) | (xor(xor((!(IN4)) & (!(IN36)), (IN18 | IN26) | (IN35 | IN4)), IN17))) | (IN48 | (!((xor(xor(IN18, IN37), IN11)) | IN15))), IN14 & (!(IN48))), IN43 & (xor(xor(xor(xor((!(IN37)) & (IN28 & IN40), IN2), (!(IN3)) | (IN40 & IN12)), xor(xor(xor(xor(IN28 & IN23, IN41), !(IN32)), (!(IN47)) & (!(IN32))), (!(IN12)) | (xor(xor(IN29, false), IN29)))), xor(xor(xor(xor(!(IN14), !(IN13)), IN21 | IN22), xor(xor(!(IN43), IN19 | IN33), xor(xor(IN36, IN14), IN24))), true)))))) & ((IN35 | IN16) | IN50)), xor(xor(IN42, IN33), IN47)), xor(xor(((!((xor(xor((IN10 | (xor(xor(IN36, IN36), IN48))) | ((!(IN42)) & (IN8 | IN31)), ((!(IN11)) | (IN12 & IN9)) | ((xor(xor(IN8, IN5), IN3)) | (true | IN26))), !((IN24 | IN50) & (xor(xor(IN15, IN45), IN38))))) & (xor(xor(IN42 | ((IN18 | IN37) & (IN15 & IN43)), (!(IN15)) | ((IN25 | IN45) | (xor(xor(IN19, IN35), IN4)))), IN3 | (!(IN13 | IN38)))))) | (IN14 | ((xor(xor(((!(IN1)) | (IN2 & IN27)) & ((IN45 | IN39) & false), xor(xor(!(!(IN21)), IN27), (IN19 | IN19) | (IN14 | IN32))), (xor(xor(xor(xor(true, IN5), IN21), xor(xor(IN38, IN6), IN18)), xor(xor(IN2, IN3), true))) & (!(IN44 & IN27)))) | (!(((IN5 & IN37) & IN1) | ((IN18 & IN28) & (IN33 | IN49))))))) | (!(!((!(IN26)) | (!((xor(xor(IN23 | IN42, !(IN8)), !(IN5))) & ((IN8 & IN13) & (xor(xor(IN36, IN2), IN28)))))))), (xor(xor(IN48, xor(xor(IN37 & (xor(xor(IN8, IN38), (!(IN20 | IN8)) | ((IN32 | IN43) & (!(IN9))))), (!(IN28 | (xor(xor(IN40 & IN12, !(IN46)), IN17 & IN49)))) | IN38), IN3)), xor(xor(!(!(xor(xor(xor(xor(!(IN23), IN1), IN18 & IN50), !(!(IN11))), xor(xor(xor(xor(IN47, IN15), IN49), !(IN44)), !(IN44))))), xor(xor(xor(xor((!(IN29 | IN44)) | IN43, IN34), xor(xor(xor(xor(IN8 & IN46, IN14), IN25 & IN1), !(IN50 | IN47)), IN33)), IN16), (!(xor(xor(IN41 | IN9, xor(xor(IN10, false), IN32)), IN18))) & ((xor(xor(IN30 & IN49, IN35), IN49 & IN33)) & ((!(IN29)) & (xor(xor(IN45, IN43), IN26)))))), ((((IN37 | IN4) | (xor(xor(IN5, IN44), IN33))) | (xor(xor(IN40 & IN9, IN43 | IN4), xor(xor(IN41, IN16), IN9)))) | (!(IN16 | IN36))) & (!((xor(xor(IN40 | IN41, !(IN8)), xor(xor(IN50, IN30), IN14))) | (xor(xor(IN19, IN7 & IN10), xor(xor(IN24, IN40), IN28)))))))) & (xor(xor(IN22 | IN44, xor(xor(xor(xor((((!(IN12)) | IN43) | (!(!(IN46)))) & ((xor(xor(xor(xor(IN8, IN25), IN44), IN20), xor(xor(IN47, IN42), IN6))) | (xor(xor(IN1 | IN8, xor(xor(IN39, IN36), IN4)), IN11 | IN4))), (((IN28 | IN43) & (IN47 | IN33)) & IN25) & (!(IN8))), xor(xor(((IN48 & IN49) & IN49) | ((xor(xor(IN42, IN46), IN2)) | (xor(xor(IN17, IN23), IN49))), !(!(IN42))), !(!(IN43 | true)))), xor(xor(((xor(xor(IN32 | IN33, xor(xor(IN10, IN47), IN6)), !(IN32))) & IN43) | (xor(xor(!(IN3), IN4 | (xor(xor(IN30, IN34), IN17))), (IN9 | IN26) & (!(IN15)))), !(!(!(IN10 | IN23)))), xor(xor((xor(xor(IN50 | IN45, xor(xor(IN29, IN42), IN35)), IN2 & IN36)) | IN7, (IN25 & (IN24 | IN6)) & (xor(xor(IN35 & IN41, true & IN36), IN44 | IN2))), xor(xor(!(true | IN35), xor(xor(IN44 | IN41, xor(xor(IN45, IN12), IN34)), !(IN16))), !(IN2))))), !(!(!(xor(xor(IN36 & IN50, IN50), IN24 & IN9)))))), (true & (((!(IN33 | IN50)) & (!(IN2 & IN44))) | (xor(xor(IN18 & IN17, (IN21 | IN47) & (IN27 | IN27)), (IN3 & IN22) | IN49)))) & (!(xor(xor(((xor(xor(IN4, IN50), IN15)) & (IN17 | IN19)) | (!(xor(xor(IN38, IN4), IN44))), (!(!(IN16))) & IN26), ((IN20 & IN7) | (IN12 & IN31)) | (!(IN24 & IN32)))))))), (!(xor(xor(IN35, xor(xor(IN19, xor(xor(!((xor(xor(IN30, IN10), IN4)) & (IN26 & IN43)), xor(xor(xor(xor(IN8 | IN25, !(IN4)), IN26 | IN39), xor(xor(IN14, IN48 & IN29), !(IN29))), (IN47 | IN42) & IN50)), (xor(xor(true, !(IN19)), !(IN24))) & (!(IN26 & IN10)))), (IN1 & (!(xor(xor(IN2, IN27), IN47)))) & (!((IN41 & IN13) & (IN24 | IN35))))), !(IN20)))) | (!(((((!(IN36)) | IN3) | IN45) & ((((!(IN12)) | (IN49 & IN17)) | (xor(xor(!(IN49), xor(xor(IN40, IN47), IN48)), !(IN37)))) | IN40)) & (!(IN9 | (true | (!(IN44 | IN40))))))))), xor(xor(xor(xor((((!((xor(xor(!(IN15), IN45 | IN9), IN5)) & (!(IN17)))) | IN19) & (xor(xor(xor(xor(xor(xor(xor(xor(IN1, xor(xor(IN45, IN17), IN13)), xor(xor(IN9, IN3), IN47)), (IN34 | IN6) & (!(IN34))), IN6), xor(xor((!(IN41)) & (xor(xor(IN47, IN5), IN29)), !(true & IN18)), IN11)), IN49), xor(xor(IN20 | ((xor(xor(IN38, IN42), IN1)) & (!(IN39))), !((xor(xor(IN36, IN28), IN6)) | (!(IN9)))), (xor(xor(IN30, IN37 | IN9), IN12 | IN38)) | IN20)), xor(xor((IN40 | (!(IN40))) & (xor(xor(IN35 & IN45, IN15), IN18 & IN10)), !(xor(xor(xor(xor(IN11, IN42), IN31), IN2 | IN34), IN45))), (xor(xor(IN3 | IN12, IN8), IN28 | IN25)) & IN9)))) & ((IN50 | (xor(xor(!((!(IN2)) & IN29), IN4), xor(xor((xor(xor(IN33, IN15), IN27)) | (!(IN35)), xor(xor(IN11 | IN18, IN2 | true), IN19 & IN29)), (IN15 | IN6) & (IN36 | IN47))))) & IN1), xor(xor((!((((IN34 | IN23) & IN33) | ((IN26 | IN9) | (IN17 & IN17))) & (xor(xor(!(IN13 | IN4), !(IN32 | IN30)), !(IN26))))) | (((xor(xor((!(IN14)) & (!(IN28)), IN1), IN5)) | (xor(xor(xor(xor(IN24 | IN12, IN13 | false), IN21 & IN24), (IN14 | IN10) & (IN25 & IN33)), IN24))) | (IN16 & IN29)), (!(!(xor(xor(!(IN43 & IN19), !(IN26 | IN15)), (IN31 & IN23) | (xor(xor(IN28, IN20), IN7)))))) & IN17), xor(xor(((xor(xor((!(IN27)) & (IN24 & IN35), (IN40 & IN30) | (IN34 & true)), IN19)) | (IN45 | ((xor(xor(IN15, IN9), IN4)) & IN37))) | IN40, !((IN6 & (xor(xor(xor(xor(IN3, IN9), IN33), !(IN47)), IN39 & IN5))) & (xor(xor(IN36, xor(xor(false | IN47, xor(xor(IN24, IN35), IN1)), IN45 & IN13)), (!(IN36)) | (IN38 & IN3))))), (xor(xor(IN35, (!(!(IN43))) | ((!(IN4)) | (xor(xor(IN9, IN19), IN36)))), xor(xor(IN38, xor(xor(xor(xor(IN48, IN41), IN7), IN30), !(IN24))), !(!(IN8))))) & (xor(xor(((IN34 | IN24) & (!(IN44))) | (!(IN42 | IN34)), xor(xor(xor(xor(IN16 & IN19, IN33), xor(xor(IN5, IN3), IN19)), IN34), IN19 | (IN3 | IN7))), xor(xor(IN43, xor(xor(false | IN25, IN16 & IN14), IN31 & IN6)), xor(xor(IN5, xor(xor(IN35, IN17), IN2)), IN8 & IN22))))))), IN9), IN41 | (!(!(xor(xor((!(!(!(IN36)))) | (!(!(xor(xor(IN4, IN32), IN32)))), xor(xor(IN13, (xor(xor(IN19, IN38 & IN33), !(IN41))) | (!(!(IN39)))), IN9)), xor(xor(IN29, !((true & IN12) | (xor(xor(IN3, false), IN35)))), ((xor(xor(IN10, IN19), IN7)) | (IN2 | true)) | IN48)))))), ((xor(xor(!(xor(xor(!((IN35 | IN36) & (IN15 & IN44)), xor(xor((xor(xor(IN37, IN25), IN10)) & IN12, !(!(IN46))), !(IN37 | IN9))), ((IN2 & IN19) & (IN1 | IN6)) | (!(IN1 & IN20)))), xor(xor((!(!(IN1 & IN39))) & IN32, xor(xor(!(xor(xor(IN9 | IN11, IN13 & IN43), !(IN29))), xor(xor(IN50 | true, !(IN36 & IN13)), (!(IN20)) | IN50)), xor(xor(IN12 | (xor(xor(IN19, IN15), IN32)), xor(xor(IN34 | IN5, !(IN19)), IN33 | IN43)), xor(xor(IN18 & IN17, IN22), xor(xor(IN41, IN30), IN28))))), !((!(!(IN47))) | (!(IN14))))), xor(xor(IN5, IN10), (!(IN13)) | IN35))) & IN11) & (xor(xor((!((!((!(IN35)) & IN47)) & IN28)) | (xor(xor((IN16 & (IN24 & (IN49 & IN16))) & IN41, ((!(xor(xor(IN18, IN33), IN30))) | ((IN13 & IN44) | (xor(xor(IN21, IN38), IN2)))) | ((!(IN38)) | (!(IN25 & IN24)))), xor(xor(!((!(IN13)) | IN5), (!(IN24)) & ((IN44 | IN13) | (xor(xor(IN13, IN6), IN19)))), xor(xor((IN36 & IN49) | true, !(IN4 & IN35)), xor(xor(IN25 & IN13, IN41), xor(xor(IN16, IN26), false)))))), IN27), !(IN42)))))

*)

FUNCTION_BLOCK F_CollectInput
  VAR_IN_OUT
      Data : ARRAY[1..50] OF BOOL;
  END_VAR
  VAR_INPUT
      TICK  : BOOL := 0;
      IN1   : BOOL := 0;
      IN2   : BOOL := 0;
      IN3   : BOOL := 0;
      IN4   : BOOL := 0;
      IN5   : BOOL := 0;
      RESET : BOOL := FALSE;
  END_VAR
  VAR_OUTPUT
      Finished : BOOL;
  END_VAR
  VAR
      j    : USINT := 1;
      tock : BOOL  := 0;
  END_VAR
  IF NOT RESET AND tock = NOT TICK THEN
      Data[j]   := IN1;
      Data[j+1] := IN2;
      Data[j+2] := IN3;
      Data[j+3] := IN4;
      Data[j+4] := IN5;
      j := j + 5;
      tock := TICK;
  ELSE
      j := 1;
      tock := 0;
  END_IF;
  Finished := (j > 50);
END_FUNCTION_BLOCK


PROGRAM Boiler
  VAR
    Data  : ARRAY[1..50] OF BOOL;
    Ready : BOOL;
    CollectInput : F_CollectInput;
  END_VAR
  VAR
    TICK     AT %IX1.0 : BOOL;
    IN1      AT %IX0.3 : BOOL;
    IN2      AT %IX0.4 : BOOL;
    IN3      AT %IX0.5 : BOOL;
    IN4      AT %IX0.6 : BOOL;
    IN5      AT %IX0.7 : BOOL;
    OutReady AT %QX0.0 : BOOL := FALSE;
    FeedNext AT %QX0.1 : BOOL := FALSE;
    Out      AT %QX0.2 : BOOL;
  END_VAR
  CollectInput(TICK:=TICK, IN1:=IN1, IN2:=IN2, IN3:=IN3, IN4:=IN4, IN5:=IN5);
  Ready := CollectInput.Finished;
  FeedNext := 1;
  IF Ready THEN
    Out := ((((Data[21] XOR ((Data[18] AND ((((((((Data[50] OR Data[1]) AND (Data[14] AND Data[11])) XOR (((Data[43] OR Data[14]) XOR ((Data[44] XOR Data[33]) XOR Data[13])) XOR (NOT Data[12]))) XOR Data[23]) OR ((((NOT Data[4]) AND (NOT Data[36])) XOR ((Data[18] OR Data[26]) OR (Data[35] OR Data[4]))) XOR Data[17])) OR (Data[48] OR (NOT (((Data[18] XOR Data[37]) XOR Data[11]) OR Data[15])))) XOR (Data[14] AND (NOT Data[48]))) XOR (Data[43] AND ((((((NOT Data[37]) AND (Data[28] AND Data[40])) XOR Data[2]) XOR ((NOT Data[3]) OR (Data[40] AND Data[12]))) XOR (((((Data[28] AND Data[23]) XOR Data[41]) XOR (NOT Data[32])) XOR ((NOT Data[47]) AND (NOT Data[32]))) XOR ((NOT Data[12]) OR ((Data[29] XOR FALSE) XOR Data[29])))) XOR (((((NOT Data[14]) XOR (NOT Data[13])) XOR (Data[21] OR Data[22])) XOR (((NOT Data[43]) XOR (Data[19] OR Data[33])) XOR ((Data[36] XOR Data[14]) XOR Data[24]))) XOR TRUE))))) AND ((Data[35] OR Data[16]) OR Data[50]))) XOR ((Data[42] XOR Data[33]) XOR Data[47])) XOR (((((NOT (((((Data[10] OR ((Data[36] XOR Data[36]) XOR Data[48])) OR ((NOT Data[42]) AND (Data[8] OR Data[31]))) XOR (((NOT Data[11]) OR (Data[12] AND Data[9])) OR (((Data[8] XOR Data[5]) XOR Data[3]) OR (TRUE OR Data[26])))) XOR (NOT ((Data[24] OR Data[50]) AND ((Data[15] XOR Data[45]) XOR Data[38])))) AND (((Data[42] OR ((Data[18] OR Data[37]) AND (Data[15] AND Data[43]))) XOR ((NOT Data[15]) OR ((Data[25] OR Data[45]) OR ((Data[19] XOR Data[35]) XOR Data[4])))) XOR (Data[3] OR (NOT (Data[13] OR Data[38])))))) OR (Data[14] OR ((((((NOT Data[1]) OR (Data[2] AND Data[27])) AND ((Data[45] OR Data[39]) AND FALSE)) XOR (((NOT (NOT Data[21])) XOR Data[27]) XOR ((Data[19] OR Data[19]) OR (Data[14] OR Data[32])))) XOR (((((TRUE XOR Data[5]) XOR Data[21]) XOR ((Data[38] XOR Data[6]) XOR Data[18])) XOR ((Data[2] XOR Data[3]) XOR TRUE)) AND (NOT (Data[44] AND Data[27])))) OR (NOT (((Data[5] AND Data[37]) AND Data[1]) OR ((Data[18] AND Data[28]) AND (Data[33] OR Data[49]))))))) OR (NOT (NOT ((NOT Data[26]) OR (NOT ((((Data[23] OR Data[42]) XOR (NOT Data[8])) XOR (NOT Data[5])) AND ((Data[8] AND Data[13]) AND ((Data[36] XOR Data[2]) XOR Data[28])))))))) XOR (((Data[48] XOR (((Data[37] AND ((Data[8] XOR Data[38]) XOR ((NOT (Data[20] OR Data[8])) OR ((Data[32] OR Data[43]) AND (NOT Data[9]))))) XOR ((NOT (Data[28] OR (((Data[40] AND Data[12]) XOR (NOT Data[46])) XOR (Data[17] AND Data[49])))) OR Data[38])) XOR Data[3])) XOR (((NOT (NOT (((((NOT Data[23]) XOR Data[1]) XOR (Data[18] AND Data[50])) XOR (NOT (NOT Data[11]))) XOR ((((Data[47] XOR Data[15]) XOR Data[49]) XOR (NOT Data[44])) XOR (NOT Data[44]))))) XOR ((((((NOT (Data[29] OR Data[44])) OR Data[43]) XOR Data[34]) XOR (((((Data[8] AND Data[46]) XOR Data[14]) XOR (Data[25] AND Data[1])) XOR (NOT (Data[50] OR Data[47]))) XOR Data[33])) XOR Data[16]) XOR ((NOT (((Data[41] OR Data[9]) XOR ((Data[10] XOR FALSE) XOR Data[32])) XOR Data[18])) AND ((((Data[30] AND Data[49]) XOR Data[35]) XOR (Data[49] AND Data[33])) AND ((NOT Data[29]) AND ((Data[45] XOR Data[43]) XOR Data[26])))))) XOR (((((Data[37] OR Data[4]) OR ((Data[5] XOR Data[44]) XOR Data[33])) OR (((Data[40] AND Data[9]) XOR (Data[43] OR Data[4])) XOR ((Data[41] XOR Data[16]) XOR Data[9]))) OR (NOT (Data[16] OR Data[36]))) AND (NOT ((((Data[40] OR Data[41]) XOR (NOT Data[8])) XOR ((Data[50] XOR Data[30]) XOR Data[14])) OR ((Data[19] XOR (Data[7] AND Data[10])) XOR ((Data[24] XOR Data[40]) XOR Data[28]))))))) AND (((Data[22] OR Data[44]) XOR ((((((((NOT Data[12]) OR Data[43]) OR (NOT (NOT Data[46]))) AND (((((Data[8] XOR Data[25]) XOR Data[44]) XOR Data[20]) XOR ((Data[47] XOR Data[42]) XOR Data[6])) OR (((Data[1] OR Data[8]) XOR ((Data[39] XOR Data[36]) XOR Data[4])) XOR (Data[11] OR Data[4])))) XOR ((((Data[28] OR Data[43]) AND (Data[47] OR Data[33])) AND Data[25]) AND (NOT Data[8]))) XOR (((((Data[48] AND Data[49]) AND Data[49]) OR (((Data[42] XOR Data[46]) XOR Data[2]) OR ((Data[17] XOR Data[23]) XOR Data[49]))) XOR (NOT (NOT Data[42]))) XOR (NOT (NOT (Data[43] OR TRUE))))) XOR (((((((Data[32] OR Data[33]) XOR ((Data[10] XOR Data[47]) XOR Data[6])) XOR (NOT Data[32])) AND Data[43]) OR (((NOT Data[3]) XOR (Data[4] OR ((Data[30] XOR Data[34]) XOR Data[17]))) XOR ((Data[9] OR Data[26]) AND (NOT Data[15])))) XOR (NOT (NOT (NOT (Data[10] OR Data[23]))))) XOR ((((((Data[50] OR Data[45]) XOR ((Data[29] XOR Data[42]) XOR Data[35])) XOR (Data[2] AND Data[36])) OR Data[7]) XOR ((Data[25] AND (Data[24] OR Data[6])) AND (((Data[35] AND Data[41]) XOR (TRUE AND Data[36])) XOR (Data[44] OR Data[2])))) XOR (((NOT (TRUE OR Data[35])) XOR (((Data[44] OR Data[41]) XOR ((Data[45] XOR Data[12]) XOR Data[34])) XOR (NOT Data[16]))) XOR (NOT Data[2]))))) XOR (NOT (NOT (NOT (((Data[36] AND Data[50]) XOR Data[50]) XOR (Data[24] AND Data[9]))))))) XOR ((TRUE AND (((NOT (Data[33] OR Data[50])) AND (NOT (Data[2] AND Data[44]))) OR (((Data[18] AND Data[17]) XOR ((Data[21] OR Data[47]) AND (Data[27] OR Data[27]))) XOR ((Data[3] AND Data[22]) OR Data[49])))) AND (NOT ((((((Data[4] XOR Data[50]) XOR Data[15]) AND (Data[17] OR Data[19])) OR (NOT ((Data[38] XOR Data[4]) XOR Data[44]))) XOR ((NOT (NOT Data[16])) AND Data[26])) XOR (((Data[20] AND Data[7]) OR (Data[12] AND Data[31])) OR (NOT (Data[24] AND Data[32]))))))))) XOR ((NOT ((Data[35] XOR ((Data[19] XOR (((NOT (((Data[30] XOR Data[10]) XOR Data[4]) AND (Data[26] AND Data[43]))) XOR (((((Data[8] OR Data[25]) XOR (NOT Data[4])) XOR (Data[26] OR Data[39])) XOR ((Data[14] XOR (Data[48] AND Data[29])) XOR (NOT Data[29]))) XOR ((Data[47] OR Data[42]) AND Data[50]))) XOR (((TRUE XOR (NOT Data[19])) XOR (NOT Data[24])) AND (NOT (Data[26] AND Data[10]))))) XOR ((Data[1] AND (NOT ((Data[2] XOR Data[27]) XOR Data[47]))) AND (NOT ((Data[41] AND Data[13]) AND (Data[24] OR Data[35])))))) XOR (NOT Data[20]))) OR (NOT (((((NOT Data[36]) OR Data[3]) OR Data[45]) AND ((((NOT Data[12]) OR (Data[49] AND Data[17])) OR (((NOT Data[49]) XOR ((Data[40] XOR Data[47]) XOR Data[48])) XOR (NOT Data[37]))) OR Data[40])) AND (NOT (Data[9] OR (TRUE OR (NOT (Data[44] OR Data[40])))))))))) XOR ((((((((NOT ((((NOT Data[15]) XOR (Data[45] OR Data[9])) XOR Data[5]) AND (NOT Data[17]))) OR Data[19]) AND ((((((((Data[1] XOR ((Data[45] XOR Data[17]) XOR Data[13])) XOR ((Data[9] XOR Data[3]) XOR Data[47])) XOR ((Data[34] OR Data[6]) AND (NOT Data[34]))) XOR Data[6]) XOR ((((NOT Data[41]) AND ((Data[47] XOR Data[5]) XOR Data[29])) XOR (NOT (TRUE AND Data[18]))) XOR Data[11])) XOR Data[49]) XOR (((Data[20] OR (((Data[38] XOR Data[42]) XOR Data[1]) AND (NOT Data[39]))) XOR (NOT (((Data[36] XOR Data[28]) XOR Data[6]) OR (NOT Data[9])))) XOR (((Data[30] XOR (Data[37] OR Data[9])) XOR (Data[12] OR Data[38])) OR Data[20]))) XOR ((((Data[40] OR (NOT Data[40])) AND (((Data[35] AND Data[45]) XOR Data[15]) XOR (Data[18] AND Data[10]))) XOR (NOT ((((Data[11] XOR Data[42]) XOR Data[31]) XOR (Data[2] OR Data[34])) XOR Data[45]))) XOR ((((Data[3] OR Data[12]) XOR Data[8]) XOR (Data[28] OR Data[25])) AND Data[9])))) AND ((Data[50] OR (((NOT ((NOT Data[2]) AND Data[29])) XOR Data[4]) XOR (((((Data[33] XOR Data[15]) XOR Data[27]) OR (NOT Data[35])) XOR (((Data[11] OR Data[18]) XOR (Data[2] OR TRUE)) XOR (Data[19] AND Data[29]))) XOR ((Data[15] OR Data[6]) AND (Data[36] OR Data[47]))))) AND Data[1])) XOR ((((NOT ((((Data[34] OR Data[23]) AND Data[33]) OR ((Data[26] OR Data[9]) OR (Data[17] AND Data[17]))) AND (((NOT (Data[13] OR Data[4])) XOR (NOT (Data[32] OR Data[30]))) XOR (NOT Data[26])))) OR ((((((NOT Data[14]) AND (NOT Data[28])) XOR Data[1]) XOR Data[5]) OR (((((Data[24] OR Data[12]) XOR (Data[13] OR FALSE)) XOR (Data[21] AND Data[24])) XOR ((Data[14] OR Data[10]) AND (Data[25] AND Data[33]))) XOR Data[24])) OR (Data[16] AND Data[29]))) XOR ((NOT (NOT (((NOT (Data[43] AND Data[19])) XOR (NOT (Data[26] OR Data[15]))) XOR ((Data[31] AND Data[23]) OR ((Data[28] XOR Data[20]) XOR Data[7]))))) AND Data[17])) XOR ((((((((NOT Data[27]) AND (Data[24] AND Data[35])) XOR ((Data[40] AND Data[30]) OR (Data[34] AND TRUE))) XOR Data[19]) OR (Data[45] OR (((Data[15] XOR Data[9]) XOR Data[4]) AND Data[37]))) OR Data[40]) XOR (NOT ((Data[6] AND ((((Data[3] XOR Data[9]) XOR Data[33]) XOR (NOT Data[47])) XOR (Data[39] AND Data[5]))) AND ((Data[36] XOR (((FALSE OR Data[47]) XOR ((Data[24] XOR Data[35]) XOR Data[1])) XOR (Data[45] AND Data[13]))) XOR ((NOT Data[36]) OR (Data[38] AND Data[3])))))) XOR (((Data[35] XOR ((NOT (NOT Data[43])) OR ((NOT Data[4]) OR ((Data[9] XOR Data[19]) XOR Data[36])))) XOR ((Data[38] XOR ((((Data[48] XOR Data[41]) XOR Data[7]) XOR Data[30]) XOR (NOT Data[24]))) XOR (NOT (NOT Data[8])))) AND (((((Data[34] OR Data[24]) AND (NOT Data[44])) OR (NOT (Data[42] OR Data[34]))) XOR (((((Data[16] AND Data[19]) XOR Data[33]) XOR ((Data[5] XOR Data[3]) XOR Data[19])) XOR Data[34]) XOR (Data[19] OR (Data[3] OR Data[7])))) XOR ((Data[43] XOR (((FALSE OR Data[25]) XOR (Data[16] AND Data[14])) XOR (Data[31] AND Data[6]))) XOR ((Data[5] XOR ((Data[35] XOR Data[17]) XOR Data[2])) XOR (Data[8] AND Data[22])))))))) XOR Data[9]) XOR (Data[41] OR (NOT (NOT ((((NOT (NOT (NOT Data[36]))) OR (NOT (NOT ((Data[4] XOR Data[32]) XOR Data[32])))) XOR ((Data[13] XOR (((Data[19] XOR (Data[38] AND Data[33])) XOR (NOT Data[41])) OR (NOT (NOT Data[39])))) XOR Data[9])) XOR ((Data[29] XOR (NOT ((TRUE AND Data[12]) OR ((Data[3] XOR FALSE) XOR Data[35])))) XOR ((((Data[10] XOR Data[19]) XOR Data[7]) OR (Data[2] OR TRUE)) OR Data[48]))))))) XOR (((((NOT (((NOT ((Data[35] OR Data[36]) AND (Data[15] AND Data[44]))) XOR (((((Data[37] XOR Data[25]) XOR Data[10]) AND Data[12]) XOR (NOT (NOT Data[46]))) XOR (NOT (Data[37] OR Data[9])))) XOR (((Data[2] AND Data[19]) AND (Data[1] OR Data[6])) OR (NOT (Data[1] AND Data[20]))))) XOR ((((NOT (NOT (Data[1] AND Data[39]))) AND Data[32]) XOR (((NOT (((Data[9] OR Data[11]) XOR (Data[13] AND Data[43])) XOR (NOT Data[29]))) XOR (((Data[50] OR TRUE) XOR (NOT (Data[36] AND Data[13]))) XOR ((NOT Data[20]) OR Data[50]))) XOR (((Data[12] OR ((Data[19] XOR Data[15]) XOR Data[32])) XOR (((Data[34] OR Data[5]) XOR (NOT Data[19])) XOR (Data[33] OR Data[43]))) XOR (((Data[18] AND Data[17]) XOR Data[22]) XOR ((Data[41] XOR Data[30]) XOR Data[28]))))) XOR (NOT ((NOT (NOT Data[47])) OR (NOT Data[14]))))) XOR ((Data[5] XOR Data[10]) XOR ((NOT Data[13]) OR Data[35]))) AND Data[11]) AND ((((NOT ((NOT ((NOT Data[35]) AND Data[47])) AND Data[28])) OR ((((Data[16] AND (Data[24] AND (Data[49] AND Data[16]))) AND Data[41]) XOR (((NOT ((Data[18] XOR Data[33]) XOR Data[30])) OR ((Data[13] AND Data[44]) OR ((Data[21] XOR Data[38]) XOR Data[2]))) OR ((NOT Data[38]) OR (NOT (Data[25] AND Data[24]))))) XOR (((NOT ((NOT Data[13]) OR Data[5])) XOR ((NOT Data[24]) AND ((Data[44] OR Data[13]) OR ((Data[13] XOR Data[6]) XOR Data[19])))) XOR ((((Data[36] AND Data[49]) OR TRUE) XOR (NOT (Data[4] AND Data[35]))) XOR (((Data[25] AND Data[13]) XOR Data[41]) XOR ((Data[16] XOR Data[26]) XOR FALSE)))))) XOR Data[27]) XOR (NOT Data[42])))));
    OutReady := 1;
    CollectInput(RESET:=TRUE);
  END_IF;
END_PROGRAM


CONFIGURATION Config0
  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : Boiler;
  END_RESOURCE
END_CONFIGURATION
