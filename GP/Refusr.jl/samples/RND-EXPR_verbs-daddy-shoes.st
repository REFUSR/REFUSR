(*
This code implements a randomly grown symbolic expression:

xor(xor(xor(xor(!(xor(xor(xor(xor(IN4 | ((xor(xor((IN45 | IN28) | (!(IN1)), !(xor(xor(IN26, IN35), IN44))), !(IN9 & IN32))) | IN28), IN38 & (!(IN9))), (IN40 | ((IN45 & (IN12 | IN44)) | (!(xor(xor(IN22, IN35), IN39))))) & (!(((!(IN42)) & (IN26 | IN30)) | ((xor(xor(IN9, IN37), IN5)) | (xor(xor(IN11, true), IN29)))))), IN27 | (xor(xor((((!(IN48)) | (IN49 & IN17)) | ((!(IN7)) & IN24)) & (IN31 & ((xor(xor(IN41, IN44), IN33)) & IN40)), IN8 | (xor(xor(xor(xor(IN35 | IN10, IN46 | IN12), IN3 & IN32), (IN13 & IN4) & (!(IN15))), xor(xor(!(IN6), IN5), xor(xor(IN24, IN13), IN40))))), xor(xor(!(IN11), !(!(!(IN45)))), xor(xor(xor(xor(IN50 & false, IN9 & IN28), IN46), IN39), xor(xor(IN4 & IN5, IN12 & IN11), IN46)))))), !(IN21))), (((!((xor(xor(xor(xor(IN5 | IN9, xor(xor(IN3, IN25), IN6)), IN10 & IN36), xor(xor(IN32, IN37 & IN42), xor(xor(IN33, IN46), IN9))), !(!(IN6)))) & IN47)) | (IN7 & (!((xor(xor(IN6, IN44), IN10)) | IN4)))) | IN35) & (!(xor(xor(!(!(!(IN32))), xor(xor(IN25, IN6), (xor(xor(IN7, IN37), (!(IN9)) | (xor(xor(IN40, IN40), IN23)))) | (!(xor(xor(xor(xor(IN27, IN41), IN31), IN20 | IN11), xor(xor(IN42, IN45), false)))))), !((!(IN42)) | (xor(xor(xor(xor(xor(xor(IN34, IN32), true), IN39), IN48 | IN1), !(IN33 & IN48)), xor(xor(xor(xor(IN1, IN37), IN46), IN16 | IN49), xor(xor(IN38, IN3), IN17))))))))), xor(xor((xor(xor(!(xor(xor(!(xor(xor(IN25 & IN18, !(IN20)), IN5 | IN6)), xor(xor((IN22 | false) & IN7, xor(xor(IN28 & IN40, IN30 & IN50), !(IN50))), IN2 & (IN15 | IN47))), IN3)), (xor(xor(((!(IN16)) | (IN15 | IN5)) | ((IN19 & IN4) & (xor(xor(IN26, false), IN1))), (xor(xor(IN34, xor(xor(IN8, IN1), IN38)), IN7 | IN28)) & ((IN34 & IN42) | (IN16 | IN26))), xor(xor((IN18 & IN50) & (!(IN35)), IN8), IN29))) & ((!(IN44)) & IN33)), !(IN11))) & ((xor(xor(xor(xor(xor(xor((IN14 & IN49) & (IN13 | IN26), (xor(xor(IN32, IN49), IN10)) & IN35), !(IN42 | IN33)), IN44 & ((IN40 | IN31) & true)), IN29), IN43), !(xor(xor((xor(xor(IN30, IN15), IN30)) & (xor(xor(IN15, IN39), IN46)), false), xor(xor(xor(xor(IN4, IN19), IN2), !(IN16)), xor(xor(IN26, IN10), IN36)))))) | (((!(IN32)) & (xor(xor((xor(xor(IN47, IN14), IN19)) & (!(IN15)), IN21), (xor(xor(IN17, IN30), IN44)) | (IN30 & IN48)))) & IN13)), xor(xor((IN22 | (!(IN26 | ((xor(xor(IN1, IN47), IN21)) | (IN22 | IN26))))) & IN48, IN37), (xor(xor(IN32 | (!(xor(xor(IN5 & IN37, xor(xor(IN7, IN50), IN19)), IN45 | IN43))), xor(xor(IN15, !(xor(xor(IN19 & IN33, IN29), IN45))), IN28)), (!(xor(xor(IN48, !(IN43)), IN36 & IN15))) | (IN40 & (!(!(IN22)))))) | IN29)), !(!(((!(!(IN48 & IN20))) | (IN40 & (xor(xor(xor(xor(IN1, IN41), IN19), IN8 & IN49), xor(xor(IN43, IN38), IN17))))) | ((((IN34 & IN10) & (IN45 & IN33)) | (xor(xor(!(IN35), IN15), xor(xor(IN37, IN47), IN12)))) | IN14))))), IN6), xor(xor(xor(xor(xor(xor((xor(xor(!(((IN19 & IN42) & (true | IN1)) & (xor(xor(IN49 & IN29, !(IN24)), xor(xor(IN40, IN48), IN26)))), xor(xor(((IN1 | IN21) | (IN17 | false)) & (IN47 & (xor(xor(IN27, IN41), IN44))), IN27 | (!(!(IN17)))), xor(xor(xor(xor(!(IN43), !(IN11)), IN50 | IN50), IN43 | IN41), (IN44 | IN29) & (IN50 | IN48)))), !(IN10))) & (xor(xor((xor(xor(IN24 & (IN45 | IN14), IN39), IN35)) & (!((xor(xor(IN49, IN9), IN29)) | (!(IN8)))), IN9), (xor(xor(!(IN23), IN2), (!(IN25)) & (IN3 & IN41))) | ((!(!(IN14))) & ((IN2 & IN2) & (IN13 & IN13))))), xor(xor(((xor(xor(IN17, xor(xor(xor(xor(IN23, IN23), IN39), IN17 | IN20), xor(xor(IN45, IN33), IN46))), IN22 & (IN41 | IN2))) & IN29) | (!(IN31)), (xor(xor(xor(xor(IN38, xor(xor(IN9 & IN35, IN17 & IN25), IN6)), xor(xor(IN15 & IN45, IN26), IN47 | IN39)), IN26 & ((xor(xor(IN16, IN11), IN24)) & (IN23 & IN5))), (xor(xor(!(IN24), xor(xor(IN33, IN43), IN11)), false)) & (IN25 & (IN28 | IN38)))) | IN12), (!((!(xor(xor(IN11, IN22), IN40))) & (xor(xor(IN11, IN22 | IN4), xor(xor(IN33, IN44), IN40))))) | IN16)), !(xor(xor(!((xor(xor(IN46 | IN36, IN16 & IN31), !(IN35))) | ((IN1 & IN40) & IN14)), (xor(xor(IN37, !(IN13)), !(!(IN27)))) | ((xor(xor(!(IN34), IN38 | IN47), IN16)) | (xor(xor(IN22, !(IN42)), IN28 & IN39)))), (!(IN32 & (!(IN11)))) | (xor(xor(xor(xor(IN8, IN18 | IN50), xor(xor(IN1, IN5), IN43)), !(IN13)), IN19))))), IN21 & (IN34 & (((xor(xor(IN12, IN13 & IN23), (IN37 & IN44) | (IN32 | IN24))) & (xor(xor(xor(xor(IN3 & IN20, IN18 & IN42), IN5), IN47), (IN31 | IN43) | (true & IN17)))) | (((xor(xor(!(IN45), IN40 & IN27), false | IN20)) | (IN34 & (!(IN29)))) | IN32)))), xor(xor((xor(xor((xor(xor(!(IN18 & IN19), IN49 & (!(IN38))), IN22)) | (xor(xor(!(!(IN17)), !(IN16 & IN46)), !(IN12 & IN32))), !(IN1)), !(!((xor(xor(IN44, IN7), IN43)) & (IN14 & IN45))))) & (!((xor(xor(IN10 & false, IN17), IN36)) & IN7)), IN13), xor(xor(!(xor(xor(IN11, IN8), IN21 | (!(IN24 | IN38)))), IN45), IN25))), xor(xor((!(!(IN33 & (IN15 | IN35)))) | (!(!(IN36 | (!(!(IN23 & IN49)))))), !(xor(xor(((IN10 | IN44) & (!(IN16))) & ((((IN39 & IN44) | (xor(xor(IN37, IN36), IN3))) & ((IN28 & IN2) | IN50)) | ((xor(xor(xor(xor(IN41, IN19), IN6), IN31 | IN2), !(IN3))) | (xor(xor(IN46 | IN7, IN46), xor(xor(IN7, IN41), IN14))))), ((!(xor(xor(!(IN11), !(IN46)), IN20 & IN39))) | ((xor(xor(xor(xor(IN37, IN50), IN9), IN18 & IN24), IN9)) & (IN16 & (!(IN26))))) & (xor(xor((xor(xor(xor(xor(IN43, IN13), IN39), xor(xor(IN23, IN40), IN45)), xor(xor(IN39, IN1), IN50))) | (IN37 | (xor(xor(IN7, IN40), IN11))), (IN39 & (IN3 & IN7)) & (IN7 & (xor(xor(IN19, IN11), IN36)))), xor(xor((IN43 & false) & IN21, (!(IN37)) | (!(IN14))), IN15)))), !(!(xor(xor((!(IN41)) | (xor(xor(IN30, IN26), IN48)), IN28), (xor(xor(IN10, IN30), IN44)) & IN17)))))), IN34)), IN15))

*)

FUNCTION_BLOCK F_CollectInput
  VAR_IN_OUT
      Data : ARRAY[1..50] OF BOOL;
  END_VAR
  VAR_INPUT
      TICK  : BOOL := 0;
      IN1   : BOOL := 0;
      IN2   : BOOL := 0;
      IN3   : BOOL := 0;
      IN4   : BOOL := 0;
      IN5   : BOOL := 0;
      RESET : BOOL := FALSE;
  END_VAR
  VAR_OUTPUT
      Finished : BOOL;
  END_VAR
  VAR
      j    : USINT := 1;
      tock : BOOL  := 0;
  END_VAR
  IF NOT RESET AND tock = NOT TICK THEN
      Data[j]   := IN1;
      Data[j+1] := IN2;
      Data[j+2] := IN3;
      Data[j+3] := IN4;
      Data[j+4] := IN5;
      j := j + 5;
      tock := TICK;
  ELSE
      j := 1;
      tock := 0;
  END_IF;
  Finished := (j > 50);
END_FUNCTION_BLOCK


PROGRAM Boiler
  VAR
    Data  : ARRAY[1..50] OF BOOL;
    Ready : BOOL;
    CollectInput : F_CollectInput;
  END_VAR
  VAR
    TICK     AT %IX1.0 : BOOL;
    IN1      AT %IX0.3 : BOOL;
    IN2      AT %IX0.4 : BOOL;
    IN3      AT %IX0.5 : BOOL;
    IN4      AT %IX0.6 : BOOL;
    IN5      AT %IX0.7 : BOOL;
    OutReady AT %QX0.0 : BOOL := FALSE;
    FeedNext AT %QX0.1 : BOOL := FALSE;
    Out      AT %QX0.2 : BOOL;
  END_VAR
  CollectInput(TICK:=TICK, IN1:=IN1, IN2:=IN2, IN3:=IN3, IN4:=IN4, IN5:=IN5);
  Ready := CollectInput.Finished;
  FeedNext := 1;
  IF Ready THEN
    Out := (((((NOT (((((Data[4] OR (((((Data[45] OR Data[28]) OR (NOT Data[1])) XOR (NOT ((Data[26] XOR Data[35]) XOR Data[44]))) XOR (NOT (Data[9] AND Data[32]))) OR Data[28])) XOR (Data[38] AND (NOT Data[9]))) XOR ((Data[40] OR ((Data[45] AND (Data[12] OR Data[44])) OR (NOT ((Data[22] XOR Data[35]) XOR Data[39])))) AND (NOT (((NOT Data[42]) AND (Data[26] OR Data[30])) OR (((Data[9] XOR Data[37]) XOR Data[5]) OR ((Data[11] XOR TRUE) XOR Data[29])))))) XOR (Data[27] OR ((((((NOT Data[48]) OR (Data[49] AND Data[17])) OR ((NOT Data[7]) AND Data[24])) AND (Data[31] AND (((Data[41] XOR Data[44]) XOR Data[33]) AND Data[40]))) XOR (Data[8] OR (((((Data[35] OR Data[10]) XOR (Data[46] OR Data[12])) XOR (Data[3] AND Data[32])) XOR ((Data[13] AND Data[4]) AND (NOT Data[15]))) XOR (((NOT Data[6]) XOR Data[5]) XOR ((Data[24] XOR Data[13]) XOR Data[40]))))) XOR (((NOT Data[11]) XOR (NOT (NOT (NOT Data[45])))) XOR (((((Data[50] AND FALSE) XOR (Data[9] AND Data[28])) XOR Data[46]) XOR Data[39]) XOR (((Data[4] AND Data[5]) XOR (Data[12] AND Data[11])) XOR Data[46])))))) XOR (NOT Data[21]))) XOR ((((NOT ((((((Data[5] OR Data[9]) XOR ((Data[3] XOR Data[25]) XOR Data[6])) XOR (Data[10] AND Data[36])) XOR ((Data[32] XOR (Data[37] AND Data[42])) XOR ((Data[33] XOR Data[46]) XOR Data[9]))) XOR (NOT (NOT Data[6]))) AND Data[47])) OR (Data[7] AND (NOT (((Data[6] XOR Data[44]) XOR Data[10]) OR Data[4])))) OR Data[35]) AND (NOT (((NOT (NOT (NOT Data[32]))) XOR ((Data[25] XOR Data[6]) XOR (((Data[7] XOR Data[37]) XOR ((NOT Data[9]) OR ((Data[40] XOR Data[40]) XOR Data[23]))) OR (NOT ((((Data[27] XOR Data[41]) XOR Data[31]) XOR (Data[20] OR Data[11])) XOR ((Data[42] XOR Data[45]) XOR FALSE)))))) XOR (NOT ((NOT Data[42]) OR ((((((Data[34] XOR Data[32]) XOR TRUE) XOR Data[39]) XOR (Data[48] OR Data[1])) XOR (NOT (Data[33] AND Data[48]))) XOR ((((Data[1] XOR Data[37]) XOR Data[46]) XOR (Data[16] OR Data[49])) XOR ((Data[38] XOR Data[3]) XOR Data[17]))))))))) XOR ((((((NOT (((NOT (((Data[25] AND Data[18]) XOR (NOT Data[20])) XOR (Data[5] OR Data[6]))) XOR ((((Data[22] OR FALSE) AND Data[7]) XOR (((Data[28] AND Data[40]) XOR (Data[30] AND Data[50])) XOR (NOT Data[50]))) XOR (Data[2] AND (Data[15] OR Data[47])))) XOR Data[3])) XOR ((((((NOT Data[16]) OR (Data[15] OR Data[5])) OR ((Data[19] AND Data[4]) AND ((Data[26] XOR FALSE) XOR Data[1]))) XOR (((Data[34] XOR ((Data[8] XOR Data[1]) XOR Data[38])) XOR (Data[7] OR Data[28])) AND ((Data[34] AND Data[42]) OR (Data[16] OR Data[26])))) XOR ((((Data[18] AND Data[50]) AND (NOT Data[35])) XOR Data[8]) XOR Data[29])) AND ((NOT Data[44]) AND Data[33]))) XOR (NOT Data[11])) AND (((((((((Data[14] AND Data[49]) AND (Data[13] OR Data[26])) XOR (((Data[32] XOR Data[49]) XOR Data[10]) AND Data[35])) XOR (NOT (Data[42] OR Data[33]))) XOR (Data[44] AND ((Data[40] OR Data[31]) AND TRUE))) XOR Data[29]) XOR Data[43]) XOR (NOT (((((Data[30] XOR Data[15]) XOR Data[30]) AND ((Data[15] XOR Data[39]) XOR Data[46])) XOR FALSE) XOR ((((Data[4] XOR Data[19]) XOR Data[2]) XOR (NOT Data[16])) XOR ((Data[26] XOR Data[10]) XOR Data[36]))))) OR (((NOT Data[32]) AND (((((Data[47] XOR Data[14]) XOR Data[19]) AND (NOT Data[15])) XOR Data[21]) XOR (((Data[17] XOR Data[30]) XOR Data[44]) OR (Data[30] AND Data[48])))) AND Data[13]))) XOR ((((Data[22] OR (NOT (Data[26] OR (((Data[1] XOR Data[47]) XOR Data[21]) OR (Data[22] OR Data[26]))))) AND Data[48]) XOR Data[37]) XOR ((((Data[32] OR (NOT (((Data[5] AND Data[37]) XOR ((Data[7] XOR Data[50]) XOR Data[19])) XOR (Data[45] OR Data[43])))) XOR ((Data[15] XOR (NOT (((Data[19] AND Data[33]) XOR Data[29]) XOR Data[45]))) XOR Data[28])) XOR ((NOT ((Data[48] XOR (NOT Data[43])) XOR (Data[36] AND Data[15]))) OR (Data[40] AND (NOT (NOT Data[22]))))) OR Data[29]))) XOR (NOT (NOT (((NOT (NOT (Data[48] AND Data[20]))) OR (Data[40] AND ((((Data[1] XOR Data[41]) XOR Data[19]) XOR (Data[8] AND Data[49])) XOR ((Data[43] XOR Data[38]) XOR Data[17])))) OR ((((Data[34] AND Data[10]) AND (Data[45] AND Data[33])) OR (((NOT Data[35]) XOR Data[15]) XOR ((Data[37] XOR Data[47]) XOR Data[12]))) OR Data[14])))))) XOR Data[6]) XOR ((((((((((NOT (((Data[19] AND Data[42]) AND (TRUE OR Data[1])) AND (((Data[49] AND Data[29]) XOR (NOT Data[24])) XOR ((Data[40] XOR Data[48]) XOR Data[26])))) XOR (((((Data[1] OR Data[21]) OR (Data[17] OR FALSE)) AND (Data[47] AND ((Data[27] XOR Data[41]) XOR Data[44]))) XOR (Data[27] OR (NOT (NOT Data[17])))) XOR (((((NOT Data[43]) XOR (NOT Data[11])) XOR (Data[50] OR Data[50])) XOR (Data[43] OR Data[41])) XOR ((Data[44] OR Data[29]) AND (Data[50] OR Data[48]))))) XOR (NOT Data[10])) AND ((((((Data[24] AND (Data[45] OR Data[14])) XOR Data[39]) XOR Data[35]) AND (NOT (((Data[49] XOR Data[9]) XOR Data[29]) OR (NOT Data[8])))) XOR Data[9]) XOR ((((NOT Data[23]) XOR Data[2]) XOR ((NOT Data[25]) AND (Data[3] AND Data[41]))) OR ((NOT (NOT Data[14])) AND ((Data[2] AND Data[2]) AND (Data[13] AND Data[13])))))) XOR ((((((Data[17] XOR ((((Data[23] XOR Data[23]) XOR Data[39]) XOR (Data[17] OR Data[20])) XOR ((Data[45] XOR Data[33]) XOR Data[46]))) XOR (Data[22] AND (Data[41] OR Data[2]))) AND Data[29]) OR (NOT Data[31])) XOR (((((Data[38] XOR (((Data[9] AND Data[35]) XOR (Data[17] AND Data[25])) XOR Data[6])) XOR (((Data[15] AND Data[45]) XOR Data[26]) XOR (Data[47] OR Data[39]))) XOR (Data[26] AND (((Data[16] XOR Data[11]) XOR Data[24]) AND (Data[23] AND Data[5])))) XOR ((((NOT Data[24]) XOR ((Data[33] XOR Data[43]) XOR Data[11])) XOR FALSE) AND (Data[25] AND (Data[28] OR Data[38])))) OR Data[12])) XOR ((NOT ((NOT ((Data[11] XOR Data[22]) XOR Data[40])) AND ((Data[11] XOR (Data[22] OR Data[4])) XOR ((Data[33] XOR Data[44]) XOR Data[40])))) OR Data[16]))) XOR (NOT (((NOT ((((Data[46] OR Data[36]) XOR (Data[16] AND Data[31])) XOR (NOT Data[35])) OR ((Data[1] AND Data[40]) AND Data[14]))) XOR (((Data[37] XOR (NOT Data[13])) XOR (NOT (NOT Data[27]))) OR ((((NOT Data[34]) XOR (Data[38] OR Data[47])) XOR Data[16]) OR ((Data[22] XOR (NOT Data[42])) XOR (Data[28] AND Data[39]))))) XOR ((NOT (Data[32] AND (NOT Data[11]))) OR ((((Data[8] XOR (Data[18] OR Data[50])) XOR ((Data[1] XOR Data[5]) XOR Data[43])) XOR (NOT Data[13])) XOR Data[19]))))) XOR (Data[21] AND (Data[34] AND ((((Data[12] XOR (Data[13] AND Data[23])) XOR ((Data[37] AND Data[44]) OR (Data[32] OR Data[24]))) AND (((((Data[3] AND Data[20]) XOR (Data[18] AND Data[42])) XOR Data[5]) XOR Data[47]) XOR ((Data[31] OR Data[43]) OR (TRUE AND Data[17])))) OR (((((NOT Data[45]) XOR (Data[40] AND Data[27])) XOR (FALSE OR Data[20])) OR (Data[34] AND (NOT Data[29]))) OR Data[32]))))) XOR (((((((((NOT (Data[18] AND Data[19])) XOR (Data[49] AND (NOT Data[38]))) XOR Data[22]) OR (((NOT (NOT Data[17])) XOR (NOT (Data[16] AND Data[46]))) XOR (NOT (Data[12] AND Data[32])))) XOR (NOT Data[1])) XOR (NOT (NOT (((Data[44] XOR Data[7]) XOR Data[43]) AND (Data[14] AND Data[45]))))) AND (NOT ((((Data[10] AND FALSE) XOR Data[17]) XOR Data[36]) AND Data[7]))) XOR Data[13]) XOR (((NOT ((Data[11] XOR Data[8]) XOR (Data[21] OR (NOT (Data[24] OR Data[38]))))) XOR Data[45]) XOR Data[25]))) XOR ((((NOT (NOT (Data[33] AND (Data[15] OR Data[35])))) OR (NOT (NOT (Data[36] OR (NOT (NOT (Data[23] AND Data[49]))))))) XOR (NOT (((((Data[10] OR Data[44]) AND (NOT Data[16])) AND ((((Data[39] AND Data[44]) OR ((Data[37] XOR Data[36]) XOR Data[3])) AND ((Data[28] AND Data[2]) OR Data[50])) OR (((((Data[41] XOR Data[19]) XOR Data[6]) XOR (Data[31] OR Data[2])) XOR (NOT Data[3])) OR (((Data[46] OR Data[7]) XOR Data[46]) XOR ((Data[7] XOR Data[41]) XOR Data[14]))))) XOR (((NOT (((NOT Data[11]) XOR (NOT Data[46])) XOR (Data[20] AND Data[39]))) OR (((((Data[37] XOR Data[50]) XOR Data[9]) XOR (Data[18] AND Data[24])) XOR Data[9]) AND (Data[16] AND (NOT Data[26])))) AND (((((((Data[43] XOR Data[13]) XOR Data[39]) XOR ((Data[23] XOR Data[40]) XOR Data[45])) XOR ((Data[39] XOR Data[1]) XOR Data[50])) OR (Data[37] OR ((Data[7] XOR Data[40]) XOR Data[11]))) XOR ((Data[39] AND (Data[3] AND Data[7])) AND (Data[7] AND ((Data[19] XOR Data[11]) XOR Data[36])))) XOR ((((Data[43] AND FALSE) AND Data[21]) XOR ((NOT Data[37]) OR (NOT Data[14]))) XOR Data[15])))) XOR (NOT (NOT ((((NOT Data[41]) OR ((Data[30] XOR Data[26]) XOR Data[48])) XOR Data[28]) XOR (((Data[10] XOR Data[30]) XOR Data[44]) AND Data[17]))))))) XOR Data[34])) XOR Data[15]));
    OutReady := 1;
    CollectInput(RESET:=TRUE);
  END_IF;
END_PROGRAM


CONFIGURATION Config0
  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : Boiler;
  END_RESOURCE
END_CONFIGURATION
